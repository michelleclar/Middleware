#Topic名称在具体的生产与消费代码中。
#######################
#Kafka实例的broker信息，ip:port为实例的连接地址和端口，参考“收集连接信息”章节获取。举例：bootstrap.servers=100.xxx.xxx.87:909x,100.xxx.xxx.69:909x,100.xxx.xxx.155:909x
bootstrap.servers=101.43.4.193:9092
#发送确认参数
acks=all
#键的序列化方式
key.serializer=org.apache.kafka.common.serialization.StringSerializer
#值的序列化方式
value.serializer=org.apache.kafka.common.serialization.StringSerializer
#producer可以用来缓存数据的内存大小
buffer.memory=33554432
#重试次数
retries=0
#######################
#如果不使用SASL认证，以下参数请注释掉。
#######################
##设置SASL认证机制、帐号和密码。
##sasl.mechanism为SASL认证机制，username和password为SASL_SSL的用户名和密码，参考“收集连接信息”章节获取。
##SASL认证机制为“PLAIN”时，配置信息如下。
#sasl.mechanism=PLAIN
#sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
#    username="username" \
#    password="password";
##SASL认证机制为“SCRAM-SHA-512”时，配置信息如下。
#sasl.mechanism=SCRAM-SHA-512
#sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
#    username="username" \
#    password="password";
#
##设置Kafka安全协议。security.protocol为安全协议。
##安全协议为“SASL_SSL”时，配置信息如下。
#security.protocol=SASL_SSL
##ssl truststore.location为SSL证书的存放路径，如下代码以Windows系统路径格式举例，您在使用时请根据实际运行环境修改路径格式。
#ssl.truststore.location=E:\\temp\\client.jks
##ssl truststore.password为服务器证书密码，配置此密码是为了访问Java生成的jks文件。
#ssl.truststore.password=dms@kafka
##ssl.endpoint.identification.algorithm为证书域名校验开关，为空则表示关闭，这里需要保持关闭状态，必须设置为空。
#ssl.endpoint.identification.algorithm=
##安全协议为“SASL_PLAINTEXT”时，配置信息如下。
#security.protocol=SASL_PLAINTEXT
