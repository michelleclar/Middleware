apply plugin: "java"

jar {
    enabled = true
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    implementation "javax.validation:validation-api:${validationApiVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
    implementation "commons-logging:commons-logging:${commonsLoggingVersion}"
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "com.auth0:java-jwt:${jwtVersion}"
    implementation "com.alibaba:fastjson:${fastjsonVersion}"

    compileOnly "org.jooq:jooq:${jooqVersion}"
    runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
    //    implementation "ma.glasnost.orika:orika-core:${orikaVersion}"

}

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/central" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
        jcenter()
    }

    dependencies {
        /* See above for the correct groupId */
        classpath "org.jooq:jooq-codegen:${jooqVersion}"
        classpath "mysql:mysql-connector-java:${mysqlVersion}"
    }
}

//import org.jooq.codegen.GenerationTool
//import org.jooq.meta.jaxb.*
//
//GenerationTool.generate(new Configuration()
//        .withJdbc(new Jdbc()
//                .withDriver('org.h2.Driver')
//                .withUrl('jdbc:h2:~/test-gradle')
//                .withUser('sa')
//                .withPassword(''))
//        .withGenerator(new Generator()
//                .withDatabase(new Database())
//                .withGenerate(new Generate()
//                        .withPojos(true)
//                        .withDaos(true))
//                .withTarget(new Target()
//                        .withPackageName('org.jooq.example.gradle.db')
//                        .withDirectory('src/main/java'))))
